# PREFIX Key 
unbind C-b
set -g prefix C-x

bind r source-file ~/.tmux.conf\; display "config reloaded!"
set -g mouse on

# # Window & Pane Index from 1 
set -g base-index 1               # Windows start from 1
set -g pane-base-index 1          # Panes start from 1
set-option -g renumber-windows on # Auto renumber windows after close

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Splits 
bind w split-window -h
bind v split-window -v
bind q killp
bind-key Tab last-window
bind-key C command-prompt -p "New session name:" "new-session -s '%%'"

# Plugins 
set -g @plugin 'tmux-plugins/tpm'
set -g @tpm_plugins '
    tmux-plugins/tpm \
    catppuccin/tmux \
    tmux-plugins/tmux-battery \
    christoomey/vim-tmux-navigator \
'
set -g @thm_bg "#181818"
set -g @thm_fg "#d8d8d8"

# Configure Catppuccin
set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
# set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage}"
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_peach},fg=#{@thm_bg},bold]  #S },#{#[bg=#{@thm_bg},fg=#{@thm_fg}]  #S }}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_fg},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_fd}]  #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_fg},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_fg},none]│"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_fg}] 󰭦 %A %d-%m-%Y | 󰅐 %l:%M %p "

# Configure Tmux
set -g status-position top
set -g status-style "bg=#{@thm_bg}"

# pane border look and feel
setw -g pane-border-status top
setw -g pane-border-format ""
setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_fg}"
setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_fg}"
setw -g pane-border-lines single

# window look and feel
set-option -wg automatic-rename on
set-option -g automatic-rename-format ' #{b:pane_current_path}'

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_fg}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_fg}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_fg},fg=#{@thm_bg},bold"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

